<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="3.0" exclude-result-prefixes="#all" expand-text="false" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:hl7="urn:hl7-org:v3" xmlns:array="http://www.w3.org/2005/xpath-functions/array" xmlns:nf="http://www.nictiz.nl/functions" xmlns:yatcs="https://nictiz.nl/ns/YATC-shared" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:map="http://www.w3.org/2005/xpath-functions/map" xmlns:local="#local.2023030708211849411670100">
    <!-- ================================================================== -->
    <!--
        This XSL was created to facilitate mapping from ADA xml to wiki table(s) 
    -->
    <!-- ================================================================== -->
    <!--
        Copyright Â© Nictiz
        
        This program is free software; you can redistribute it and/or modify it under the terms of the
        GNU Lesser General Public License as published by the Free Software Foundation; either version
        2.1 of the License, or (at your option) any later version.
        
        This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
        without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
        See the GNU Lesser General Public License for more details.
        
        The full text of the license is available at http://www.gnu.org/copyleft/lesser.html
    -->
    <!-- ================================================================== -->

    <xsl:output method="text" encoding="utf-16"/>

    <xsl:include href="../../../../xslmod/ada-2-wiki-build-standard-parameters.mod.xsl"/>

    <xsl:import href="../../ADA2test-wiki-table-eovd.xsl"/>

    <xsl:strip-space elements="*"/>

    <!-- ======================================================================= -->

    <!-- For some unknown reason this transformation accesses a separate ADA file that is not generated by the setup process. 
         We therefore pass in the name of this file as a separate parameter. -->
    <xsl:param name="docAdaNewFilename" as="xs:string" required="yes"/>
    <xsl:variable name="doc-ada-new" as="document-node()">
        <xsl:choose>
            <xsl:when test="doc-available($docAdaNewFilename)">
                <xsl:sequence select="doc($docAdaNewFilename)"/>
            </xsl:when>
            <xsl:otherwise>
                <xsl:call-template name="yatcs:raise-error">
                    <xsl:with-param name="msg-parts" select="('Specified ADA new document ', yatcs:q($docAdaNewFilename), ' not found or not well-formed')"/>
                </xsl:call-template>
            </xsl:otherwise>
        </xsl:choose>
    </xsl:variable>

    <xsl:variable name="ada-files" select="yatcs:get-ada-files()"/>

    <xsl:param name="do-ada-files" as="xs:boolean" select="true()"/>

    <xsl:param name="debug" as="xs:boolean" required="false" select="true()"/>

    <!-- make sure the conversion uses all applicable repo stuff -->
    <xsl:variable name="this" as="element()*">
        <xsl:choose>
            <xsl:when test="$do-ada-files">
                <xsl:sequence select="$ada-files//adaxml/data/*"/>
            </xsl:when>
            <xsl:otherwise>
                <xsl:sequence select="//adaxml/data/*"/>
            </xsl:otherwise>
        </xsl:choose>
    </xsl:variable>

    <xsl:param name="transactionId" as="xs:string" select="'2.16.840.1.113883.2.4.3.11.60.30.4.39'"/>

    <!-- ================================================================== -->

    <xsl:template match="/">
        <!--  -->
        <xsl:variable name="adaFile" as="element(sturen_overdrachtsbericht_volwassenen)*" select="if ($do-ada-files) then $ada-files/adaxml/data/sturen_overdrachtsbericht_volwassenen else adaxml/data/sturen_overdrachtsbericht_volwassenen"/>
        <xsl:text>
{{DISPLAYTITLE:Sturen overdrachtsbericht volwassenen 4.0 - dekkingsgraad scenario's}}
__NUMBEREDHEADINGS__
{{IssueBox|Deze pagina is nog in bewerking}}
[[Bestand:Nictiz_logo_PO_rechts_rgb.png |link=https://www.nictiz.nl/|rechts|Naar nictiz.nl]]

=Dekkingsgraad scenario's voor Sturen overdrachtsbericht volwassenen 4.0=
De volgende scenario's zijn meegenomen:</xsl:text>
        <xsl:for-each select="$adaFile">
            <xsl:text>
* </xsl:text>
            <xsl:value-of select="concat(./@title, '(id: ',./@id, ')')"/>
        </xsl:for-each>
        <xsl:text>
Zie voor de inhoud van deze scenario's: [[TODO]]. Onderstaande tabel toont de unieke waarden voor ieder veld. Lege velden worden niet geraakt door de meegenomen bovenstaande scenario's.</xsl:text>
        <xsl:apply-templates select="$doc-ada-new/sturen_overdrachtsbericht_volwassenen" mode="dekkingsgraad">
            <xsl:with-param name="adaxml" select="$adaFile"/>
        </xsl:apply-templates>
        <xsl:text>          
[[Categorie:Kwalificatie]]</xsl:text>
    </xsl:template>

    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

    <xsl:template match="sturen_overdrachtsbericht_volwassenen" mode="dekkingsgraad">
        <!-- Template for dekkingsgraad making use of the ada_new instance as context. Supplies all fields. -->
        <xsl:param name="adaxml" as="element(sturen_overdrachtsbericht_volwassenen)*">
            <!-- The adaxml instance(s) so that the coverage of the available fields from ada_new instance can be determined. -->
        </xsl:param>
        <!-- Build a variable tabel which is tailored for output in documentation, such as wiki -->
        <xsl:variable name="tabel" as="element()">
            <tabellen>
                <!-- tabellen voor de rest -->
                <xsl:apply-templates select="*" mode="maak-tabel-dekkingsgraad">
                    <xsl:with-param name="adaxml-element" select="$adaxml/*"/>
                </xsl:apply-templates>
            </tabellen>
        </xsl:variable>

        <xsl:call-template name="yatcs:write-debug-document">
            <xsl:with-param name="contents" select="$tabel"/>
            <xsl:with-param name="filename" select="@id"/>
            <xsl:with-param name="enabled" select="$debug"/>
        </xsl:call-template>

        <xsl:for-each select="$tabel/tabel">
            <xsl:text>
=== </xsl:text>
            <xsl:value-of select="./@title"/>
            <xsl:text> ===
</xsl:text>
            <xsl:apply-templates select="." mode="wiki"/>
        </xsl:for-each>
    </xsl:template>
</xsl:stylesheet>
