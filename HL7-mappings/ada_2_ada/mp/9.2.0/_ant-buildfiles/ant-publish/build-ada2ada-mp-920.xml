<?xml version="1.0" encoding="UTF-8"?>
<!--ant -Dinput=mg (or mg, mo, mgr, mor, mvr, var or all)
    Apache ANT build file that sets up (target = setup) or by default converts transaction with references to full ada xml (target = resolve-refs)
    Apache ANT is based on Java and may be found here: https://ant.apache.org/
    run on command line or from a batch file: 
        ant [-f build.xml] [target]
        
    If you just run ant, it expects a build.xml in the working dir and runs the default target.
-->
<project basedir="." default="build" name="build-ada2ada-mp-include" xmlns:if="ant:if" xmlns:unless="ant:unless">
    <ant antfile="../../../../../_ant-buildfiles/ant-include/ant.ivy.xml" inheritall="true" usenativebasedir="true"/>
    <property name="xsl.saxon" value="${saxon.path}"/>
    <property name="xsl.saxon.class" value="net.sf.saxon.TransformerFactoryImpl"/>

    <property name="echo.label" value="ada to ada"/>

    <property name="is.name" value="Medicatieproces"/>
    <property name="is.abbreviation" value="mp"/>
    <property name="is.version" value="9.2.0"/>
    <property name="is.version.short" value="92"/>

    <property name="project.author" value="Nictiz"/>
    <property name="project.website" value="http://www.nictiz.nl/"/>
    <property name="project.status" value="beta"/>
    <property name="project.license" value="GNU-LGPL"/>
    <property name="project.copyright" value="true"/>

    <property name="build.dir" value="${basedir}/../.."/>
    <property name="dummy.output.dir" value="dummy"/>

    <property name="base.url.github.907" value="https://raw.githubusercontent.com/Nictiz/HL7-mappings/ADA2ADA-ant/ada_2_ada/mp/9.0.7"/>
    <property name="base.url.github.920" value="https://raw.githubusercontent.com/Nictiz/HL7-mappings/mp92-ada2hl7/ada_2_hl7/mp/9.2.0"/>
    <property name="base.url.github.ada2ada" value="https://raw.githubusercontent.com/Nictiz/HL7-mappings/master/"/>



    <import file="../../../_ant-buildfiles/ant-publish/build-ada2ada-mp-include.xml"/>

    <!--9.2.0-->
    <property name="ada.project.source.dir" value="C:\SVN\art_decor\trunk\ada-data\projects\${is.abbreviation}-${is.abbreviation}${is.version.short}"/>
    <property name="refs.dir" value="C:\SVN\art_decor\trunk\ada-data\adarefs2ada\${is.abbreviation}\${is.version}"/>
    <property name="refs.dir.907" value="C:\SVN\art_decor\trunk\ada-data\adarefs2ada\${is.abbreviation}\9.0.7"/>
    <property name="refs.dir.920" value="C:\SVN\art_decor\trunk\ada-data\adarefs2ada\${is.abbreviation}\9.2.0"/>


    <target name="build">
        <!-- beschikbaarstellen_medicatiegegevens -->
        <antcall target="build_sub">
            <param name="usecase" value="${usecase.mg}"/>
            <param name="usecase.short" value="mg"/>
            <param name="input.dir.startstring" value="ada_instance_repo"/>
        </antcall>

        <!-- sturen_medicatievoorschrift -->
        <antcall target="build_sub">
            <param name="usecase" value="${usecase.mv}"/>
            <param name="usecase.short" value="mv"/>
            <param name="input.dir.startstring" value="ada_instance"/>
        </antcall>
        
        <!-- sturen_afhandeling_medicatievoorschrift -->
        <antcall target="build_sub">
            <param name="usecase" value="${usecase.amv}"/>
            <param name="usecase.short" value="amv"/>
            <param name="input.dir.startstring" value="ada_instance"/>
        </antcall>
    </target>


    <target name="build_sub">

        <!-- start at 907-->
        <antcall target="ada_2_ada_sub">
            <param name="usecase" value="${usecase}"/>
            <param name="xsl.name" value="ada_${usecase.short}_907_to_920.xsl"/>
            <param name="input.dir" value="${input.dir.startstring}_in_907"/>
            <param name="output.dir" value="${input.dir.startstring}_in_907_uit_920"/>
            <param name="base.url.github" value="${base.url.github.920}"/>
        </antcall>
        <!-- roundtrip -->
        <antcall target="ada_2_ada_sub">
            <param name="usecase" value="${usecase}"/>
            <param name="xsl.name" value="ada_${usecase.short}_920_to_907.xsl"/>
            <param name="input.dir" value="${input.dir.startstring}_in_907_uit_920"/>
            <param name="output.dir" value="${input.dir.startstring}_in_907_uit_907_roundtrip"/>
            <param name="base.url.github" value="${base.url.github.907}"/>
        </antcall>
        <!-- double roundtrip -->
        <antcall target="ada_2_ada_sub">
            <param name="usecase" value="${usecase}"/>
            <param name="xsl.name" value="ada_${usecase.short}_907_to_920.xsl"/>
            <param name="input.dir" value="${input.dir.startstring}_in_907_uit_907_roundtrip"/>
            <param name="output.dir" value="${input.dir.startstring}_in_907_uit_920_roundtrip"/>
            <param name="base.url.github" value="${base.url.github.920}"/>
        </antcall>

        <!-- beschikbaarstellen_medicatiegegevens start at 920 -->
        <antcall target="ada_2_ada_sub">
            <param name="usecase" value="${usecase}"/>
            <param name="xsl.name" value="ada_${usecase.short}_920_to_907.xsl"/>
            <param name="input.dir" value="${input.dir.startstring}_in_920"/>
            <param name="output.dir" value="${input.dir.startstring}_in_920_uit_907"/>
            <param name="base.url.github" value="${base.url.github.907}"/>
        </antcall>
        <!-- roundtrip -->
        <antcall target="ada_2_ada_sub">
            <param name="usecase" value="${usecase}"/>
            <param name="xsl.name" value="ada_${usecase.short}_907_to_920.xsl"/>
            <param name="input.dir" value="${input.dir.startstring}_in_920_uit_907"/>
            <param name="output.dir" value="${input.dir.startstring}_in_920_uit_920_roundtrip"/>
            <param name="base.url.github" value="${base.url.github.920}"/>
        </antcall>
        <!-- double roundtrip -->
        <antcall target="ada_2_ada_sub">
            <param name="usecase" value="${usecase}"/>
            <param name="xsl.name" value="ada_${usecase.short}_920_to_907.xsl"/>
            <param name="input.dir" value="${input.dir.startstring}_in_920_uit_920_roundtrip"/>
            <param name="output.dir" value="${input.dir.startstring}_in_920_uit_907_roundtrip"/>
            <param name="base.url.github" value="${base.url.github.907}"/>
        </antcall>

    </target>

    <target name="ada_2_ada_sub">
        <echo message="task: ada_2_ada_sub; item: ${usecase}; xsl: ${xsl.name}; input: ${input.dir}; output:  ${output.dir}"/>
        <property name="xsl.input" value="${build.dir}/${usecase}/${input.dir}"/>
        <!-- get rid of old results -->
        <mkdir dir="${build.dir}/${usecase}/${output.dir}"/>
        <echo message="deleting contents of ${build.dir}/${usecase}/${output.dir}"/>
        <delete>
            <fileset dir="${build.dir}/${usecase}/${output.dir}">
                <include name="*.xml"/>
            </fileset>
        </delete>

        <fileset id="inputfilesMP" dir="${build.dir}/${usecase}/${input.dir}" includes="*.xml"/>
        <echo message="Contains all relevant materials to convert valid ${echo.label.in} instances for ${is.name} ${is.version} building blocks to valid ${echo.label.out} instances"/>

        <xslt force="true" style="${build.dir}/${usecase}/payload/${xsl.name}" destdir="${build.dir}/${usecase}/${output.dir}" extension=".xml" useImplicitFileset="false">
            <fileset refid="inputfilesMP"/>
            <factory name="${xsl.saxon.class}"/>
            <classpath location="${xsl.saxon}"/>
        </xslt>

        <!-- okay, now let's add conceptid's, for better comparison results, but not needed for conversion to HL7v3 or FHIR, so kept outside the ada2ada XSL's for performance reasons -->
        <move file="${build.dir}/${usecase}/${output.dir}" tofile="${build.dir}/${usecase}/${output.dir}_noconceptid"/>
        <fileset id="inputfilesAddConcept" dir="${build.dir}/${usecase}/${output.dir}_noconceptid" includes="*.xml"/>

        <xslt force="true" destdir="${build.dir}/${usecase}/${output.dir}" extension=".xml" useImplicitFileset="false">
            <style>
                <url url="${base.url.github.ada2ada}/ada_2_ada/ada/AddConceptIds.xsl"/>
            </style>
            <fileset refid="inputfilesAddConcept"/>
            <param name="schemaFileString" expression="${base.url.github}/${usecase}/ada_schemas/${usecase}.xsd"/>
            <factory name="${xsl.saxon.class}"/>
            <classpath location="${xsl.saxon}"/>
        </xslt>

        <!-- remove the temp noconceptid folder -->
        <delete dir="${build.dir}/${usecase}/${output.dir}_noconceptid" deleteonexit="true"/>

    </target>

    <target name="setup">
        <!-- beschikbaarstellen_medicatiegegevens ada_instance_repo -->
        <antcall target="setup_sub_usecase">
            <param name="usecase" value="${usecase.mg}"/>
            <param name="input.dir.startstring" value="ada_instance_repo"/>
        </antcall>

        <!-- sturen_medicatievoorschrift -->
        <antcall target="setup_sub_usecase">
            <param name="usecase" value="${usecase.mv}"/>
            <param name="input.dir.startstring" value="ada_instance"/>
        </antcall>

        <!-- sturen_afhandeling_medicatievoorschrift -->
        <antcall target="setup_sub_usecase">
            <param name="usecase" value="${usecase.amv}"/>
            <param name="input.dir.startstring" value="ada_instance"/>
        </antcall>
        

    </target>

    <target name="setup_sub_usecase">

        <antcall target="setup_sub">
            <param name="usecase" value="${usecase}"/>
            <param name="target.dir.instances" value="${input.dir.startstring}_in_907"/>
            <param name="refs.dir.instances" value="${refs.dir.907}/${usecase}/${input.dir.startstring}"/>
            <param name="fileset.include" value="*.xml"/>
        </antcall>
        <antcall target="setup_sub">
            <param name="usecase" value="${usecase}"/>
            <param name="target.dir.instances" value="${input.dir.startstring}_in_920"/>
            <param name="refs.dir.instances" value="${refs.dir.920}/${usecase}/${input.dir.startstring}"/>
            <param name="fileset.include" value="*.xml"/>
        </antcall>

    </target>


    <target name="setup_sub" description="Setup ${usecase} containing the new/schemas folder from the original ADA project and refreshed ada production instances">
        <antcall target="setup_sub_schemas">
            <param name="target.dir" value="${build.dir}/${usecase}"/>
            <param name="schema.string" value="*${usecase}.xsd"/>
        </antcall>
        <antcall target="setup_sub_instances">
            <param name="target.dir" value="${build.dir}/${usecase}/${target.dir.instances}"/>
            <param name="source.dir" value="${refs.dir.instances}"/>
            <param name="fileset.include" value="${fileset.include}"/>
        </antcall>

    </target>

    <target name="setup_sub_schemas" description="Setup ${target.dir} containing the new/schemas folder from the original ADA project">

        <mkdir dir="${target.dir}/ada_schemas"/>
        <delete>
            <fileset dir="${target.dir}/ada_schemas">
                <include name="*.xsd"/>
            </fileset>
        </delete>
        <copy todir="${target.dir}/ada_schemas" failonerror="true">
            <fileset dir="${ada.project.source.dir}/schemas">
                <include name="${schema.string}"/>
                <include name="ada_meta.xsd"/>
            </fileset>
        </copy>

    </target>

    <target name="setup_sub_instances" description="Setup ${target.dir} containing refreshed ada production instances">

        <mkdir dir="${target.dir}"/>
        <delete>
            <fileset dir="${target.dir}">
                <include name="*.xml"/>
            </fileset>
        </delete>
        <copy todir="${target.dir}" failonerror="true">
            <fileset dir="${source.dir}">
                <include name="${fileset.include}"/>
            </fileset>
        </copy>
    </target>






</project>
