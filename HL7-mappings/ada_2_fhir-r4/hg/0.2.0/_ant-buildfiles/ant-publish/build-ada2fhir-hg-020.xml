<?xml version="1.0" encoding="UTF-8"?>
<!-- Apache ANT build file that sets up (target = setup) or by default converts transaction with references to full ada xml (target = resolve-refs)
    Apache ANT is based on Java and may be found here: https://ant.apache.org/
    run on command line or from a batch file: 
        ant [-f build.xml] [target]
        
    If you just run ant, it expects a build.xml in the working dir and runs the default target.
-->
<project basedir="../.." default="convert_ada_2_fhir" name="ada2fhir_${project.prefix}" xmlns:if="ant:if" xmlns:unless="ant:unless">
    <ant antfile="../../../_ant-buildfiles/ant-include/ant.ivy.xml" inheritall="true" usenativebasedir="true"/>
    <property name="xsl.saxon" value="${saxon.path}"/>
    <property name="xsl.saxon.class" value="net.sf.saxon.TransformerFactoryImpl"/>

    <property name="echo.label.in" value="ADA"/>
    <property name="echo.label.out" value="FHIR"/>
    <property name="echo.label" value="${echo.label.in} to ${echo.label.out}"/>

    <property name="project.title" value="${echo.label} for Eerstelijnszorg 0.2.0-beta.1"/>
    <property name="project.version" value="0.2.0-beta.1"/>
    <property name="project.prefix" value="hg_0.2.0_beta.1"/>
    <property name="project.description" value="Contains all relevant materials to convert valid ${echo.label.in} instances for ELZ building blocks to valid ${echo.label.out} instances"/>
    <property name="project.author" value="Nictiz"/>
    <property name="project.website" value="http://www.nictiz.nl/"/>
    <property name="project.status" value="beta"/>
    <property name="project.license" value="GNU-LGPL"/>
    <property name="project.copyright" value="true"/>

    <property name="build.dir" value="."/>
    <property name="dummy.output.dir" value="dummy"/>
    <property name="project.source.dir" value="../../../../art_decor/projects/hg-0.2.0-beta.1"/>
    <property name="prodinst.dir" value="../../../../art_decor/production-ada-instances/hg/0.2.0-beta.1/data"/>

    <property name="usecase.svouhnp" value="sturen_verwijzing_of_update_huisarts_naar_paramedicus"/>

    <target name="setup" description="Setup subdirectories in ${build.dir}">
        <!-- copies schemas for project dir -->
        <antcall target="setup_sub_schemas">
            <param name="build.dir" value="${build.dir}/${usecase.svouhnp}"/>
            <param name="schema.string" value="*${usecase.svouhnp}.*"/>
        </antcall>
       
        <!-- copy hg instances sturen_verwijzing_of_update_huisarts_naar_paramedicus-->
        <echo>ELZ instances from ${prodinst.dir} to ${build.dir}/${usecase.svouhnp}/ada_instance</echo>
        <mkdir dir="${build.dir}/${usecase.svouhnp}/ada_instance"/>
        <delete>
            <fileset dir="${build.dir}/${usecase.svouhnp}/ada_instance">
                <include name="*.xml"/>
            </fileset>
        </delete>
        <copy todir="${build.dir}/${usecase.svouhnp}/ada_instance" failonerror="true">
            <fileset dir="${prodinst.dir}">
                <include name="hg-*.xml"/>
            </fileset>
        </copy>

        <!-- let's convert to fhir too while we're at it -->
        <antcall target="convert_ada_2_fhir"/>

    </target>

    <target name="setup_sub_schemas" description="Setup ${build.dir} containing the new/schemas folder from the original ADA project">

        <mkdir dir="${build.dir}/ada_schemas"/>
        <delete>
            <fileset dir="${build.dir}/ada_schemas" includes="*.*"/>
        </delete>

        <copy todir="${build.dir}/ada_schemas" failonerror="true">
            <fileset dir="${project.source.dir}/schemas">
                <include name="${schema.string}"/>
                <include name="ada_meta.xsd"/>
            </fileset>
        </copy>

    </target>

    <target name="convert_ada_2_fhir">

        <antcall target="convert_ada_2_fhir_sub">
            <param name="build.dir" value="${usecase.svouhnp}"/>
            <param name="xsl.in" value="ada_instance"/>
            <param name="xsl.out" value="fhir_instance"/>
        </antcall>

    </target>

    <target name="convert_ada_2_fhir_sub">

        <property name="xsl.hg" value="${build.dir}/payload/${build.dir}_2_fhir.xsl"/>

        <property name="xsl.input" value="${build.dir}/${xsl.in}"/>
        <property name="xsl.output" value="${build.dir}/${xsl.out}"/>

        <echo>Deleting previous results, if any</echo>
        <delete>
            <fileset dir="${xsl.output}" includes="*.*"/>
        </delete>

        <sequential>
            <fileset id="inputfiles" dir="${xsl.input}" includes="*.xml"/>
            
            <echo/>
            <echo>${echo.label} ${xsl.hg}</echo>
            <xslt force="true" style="${xsl.hg}" destdir="${xsl.output}" extension=".xml" useImplicitFileset="false">
                <fileset refid="inputfiles"/>
                <param name="bundleSelfLink" expression="http://dummy.nictiz.nl/dummyquery"/>
                <factory name="${xsl.saxon.class}"/>
                <classpath location="${xsl.saxon}"/>
            </xslt>
        </sequential>
    </target>

</project>