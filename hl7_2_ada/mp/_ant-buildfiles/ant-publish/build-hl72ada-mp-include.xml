<?xml version="1.0" encoding="UTF-8"?>
<!-- Apache ANT build file that sets up (target = setup) or by default converts transaction with references to full ada xml (target = resolve-refs)
    Apache ANT is based on Java and may be found here: https://ant.apache.org/
    run on command line or from a batch file: 
        ant [-f build.xml] [target]
        
    If you just run ant, it expects a build.xml in the working dir and runs the default target.
-->
<project basedir="." default="convert_hl7_2_ada" name="build-hl72ada-mp-include" xmlns:if="ant:if" xmlns:unless="ant:unless">
    <property name="is.name" value="Medicatieproces"/>
    <property name="is.abbreviation" value="mp"/>
    <property name="project.version" value="1.0.0"/>
    <property name="build.dir" value="../.."/>
    <property name="ada.project.source.dir" value="../../../../../../art_decor/projects/${is.abbreviation}-${is.abbreviation}${is.version.short}"/>
    <property name="refs.dir" value="C:\SVN\art_decor\trunk\ada-data\adarefs2ada\${is.abbreviation}\${is.version}"/>
    
    <!-- place import exactly here, otherwise it can't resolve the properties above, or we can't resolve some properties below, such as ${echo.label.in} -->
    <import file="../../../_ant-buildfiles/ant-publish/build-hl72ada-include.xml"/>
    
    <property name="echo.label" value="${echo.label.in} to ${echo.label.out}"/>
    <property name="project.title" value="${echo.label} for ${is.name} ${is.version}"/>

    <property name="usecase.av" value="sturen_afhandeling_medicatievoorschrift"/>
    <property name="usecase.mg" value="beschikbaarstellen_medicatiegegevens"/>
    <property name="usecase.mg.st" value="sturen_medicatiegegevens"/>
    <property name="usecase.mo" value="beschikbaarstellen_medicatieoverzicht"/>
    <property name="usecase.mv" value="sturen_medicatievoorschrift"/>
    <property name="usecase.vma" value="sturen_voorstel_medicatieafspraak"/>
    <property name="usecase.avma" value="sturen_antwoord_voorstel_medicatieafspraak"/>
    <property name="usecase.vv" value="beschikbaarstellen_verstrekkingenvertaling"/>
    <property name="usecase.vvv" value="sturen_voorstel_verstrekkingsverzoek"/>
    <property name="usecase.avvv" value="sturen_antwoord_voorstel_verstrekkingsverzoek"/>
    
    <target name="setup" description="Setup subdirectories in ${build.dir}">
        <!-- copies schemas for project dir and appropriate ada instances from refs.dir -->
        
        <!-- sturen_medicatievoorschrift -->
        <antcall target="setup_sub">
            <param name="sub.build.dir" value="${build.dir}/${usecase.mv}"/>
            <param name="schema.string" value="*${usecase.mv}.xsd"/>
            <param name="fileset.dir" value="cda_instance"/>
            <param name="fileset.include" value="*.xml"/>
            <param name="refs.dir" value="${refs.dir}/${usecase.mv}"/>
        </antcall>

        <!-- beschikbaarstellen_medicatiegegevens -->
        <antcall target="setup_sub">
            <param name="sub.build.dir" value="${build.dir}/${usecase.mg}"/>
            <param name="schema.string" value="*${usecase.mg}.xsd"/>
            <param name="fileset.dir" value="hl7_instance"/>
            <param name="fileset.include" value="*.xml"/>
            <param name="refs.dir" value="${refs.dir}/${usecase.mg}"/>
        </antcall>       
        
        <!-- sturen_medicatiegegevens -->
        <antcall target="setup_sub">
            <param name="sub.build.dir" value="${build.dir}/${usecase.mg.st}"/>
            <param name="schema.string" value="*${usecase.mg.st}.xsd"/>
            <param name="fileset.dir" value="hl7_instance"/>
            <param name="fileset.include" value="*.xml"/>
            <param name="refs.dir" value="${refs.dir}/${usecase.mg.st}"/>
        </antcall>       
        

        <!-- beschikbaarstellen_medicatieoverzicht -->
        <antcall target="setup_sub">
            <param name="sub.build.dir" value="${build.dir}/${usecase.mo}"/>
            <param name="schema.string" value="*${usecase.mo}.xsd"/>
            <param name="fileset.dir" value="hl7_instance"/>
            <param name="fileset.include" value="*.xml"/>
            <param name="refs.dir" value="${refs.dir}/${usecase.mo}"/>
        </antcall>        
 
    </target>
    
    <target name="roundtrip_hl7_2_ada_2_hl7">
        
        <!-- medicatievoorschrift -->
        <!-- create the temporary hl7_instance_roundtrip, we only need the cda version -->
        <mkdir dir="${build.dir}/${usecase.mv}/hl7_instance_roundtrip"/>
        
        <!-- let's start the roundtrip, so ada 2 hl7, use hl7_2_ada sub, but with an ada_2_hl7 xsl! -->
        <antcall target="convert_hl7_2_ada_sub">
            <param name="sub.build.dir" value="${build.dir}/${usecase.mv}"/>
            <param name="xsl.name" value="../../../../ada_2_hl7/mp/${is.version}/${usecase.mv}/payload/${usecase.mv}_org.xsl"/>
            <param name="xsl.in" value="ada_instance"/>
            <param name="xsl.out" value="hl7_instance_roundtrip"/>
        </antcall>        
        <!-- convert the resulting medicatievoorschrift organizer to CDA -->
        <antcall target="convert_hl7_2_ada_sub">
            <param name="sub.build.dir" value="${build.dir}/${usecase.mv}"/>
            <param name="xsl.name" value="../../../../ada_2_hl7/mp/MP9_Transform_Organizer2CDA.xsl"/>
            <param name="xsl.in" value="hl7_instance_roundtrip"/>
            <param name="xsl.out" value="cda_instance_roundtrip"/>
        </antcall>
        <!-- clean up the hl7_instance_roundtrip, we only need the cda version -->
        <delete dir="${build.dir}/${usecase.mv}/hl7_instance_roundtrip"/>
        
        <!-- let's start the roundtrip for beschikbaarstellen_medicatiegegevens, so ada 2 hl7, use hl7_2_ada sub, but with an ada_2_hl7 xsl! -->
        <antcall target="convert_hl7_2_ada_sub">
            <param name="sub.build.dir" value="${build.dir}/${usecase.mg}"/>
            <param name="xsl.name" value="../../../../ada_2_hl7/mp/${is.version}/${usecase.mg}/payload/${usecase.mg}_org.xsl"/>
            <param name="xsl.in" value="ada_instance"/>
            <param name="xsl.out" value="hl7_instance_roundtrip"/>
        </antcall>
        
        <!-- sturen_medicatiegegevens not implemented pre 9.3.0, and 9.3.0 has its' own ant routines, do not use here -->
        <!-- let's start the roundtrip for sturen_medicatiegegevens, so ada 2 hl7, use hl7_2_ada sub, but with an ada_2_hl7 xsl! -->
<!--        <antcall target="convert_hl7_2_ada_sub">
            <param name="sub.build.dir" value="${build.dir}/${usecase.mg.st}"/>
            <param name="xsl.name" value="../../../../ada_2_hl7/mp/${is.version}/${usecase.mg.st}/payload/${usecase.mg.st}_org.xsl"/>
            <param name="xsl.in" value="ada_instance"/>
            <param name="xsl.out" value="hl7_instance_roundtrip"/>
        </antcall>-->
        
    </target>

    <target name="convert_hl7_2_ada">          

        <!-- convert medicatiegegevens -->
        <antcall target="convert_hl7_2_ada_sub">
            <param name="sub.build.dir" value="${build.dir}/${usecase.mg}"/>
            <param name="xsl.name" value="payload/${usecase.mg}_hl7_2_ada.xsl"/>
            <param name="xsl.in" value="hl7_instance"/>
            <param name="xsl.out" value="ada_instance"/>
        </antcall>

        <!--<!-\- convert medicatieoverzicht -\->
        <antcall target="convert_hl7_2_ada_sub">
            <param name="sub.build.dir" value="${build.dir}/${usecase.mo}"/>
            <param name="xsl.name" value="payload/${usecase.mo}_hl7_2_ada.xsl"/>
            <param name="xsl.in" value="hl7_instance"/>
            <param name="xsl.out" value="ada_instance"/>
        </antcall>-->
    </target>



</project>
