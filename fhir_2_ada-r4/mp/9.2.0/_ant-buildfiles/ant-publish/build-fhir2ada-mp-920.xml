<?xml version="1.0" encoding="UTF-8"?>
<!-- Apache ANT build file that sets up (target = setup) or by default converts transaction with references to full ada xml (target = resolve-refs)
    Apache ANT is based on Java and may be found here: https://ant.apache.org/
    run on command line or from a batch file: 
        ant [-f build.xml] [target]
        
    If you just run ant, it expects a build.xml in the working dir and runs the default target.
-->
<project basedir="." default="convert_fhir_2_ada" name="ada2fhir_${project.prefix}" xmlns:if="ant:if" xmlns:unless="ant:unless">
    <ant antfile="../../../../../_ant-buildfiles/ant-include/ant.ivy.xml" inheritall="true" usenativebasedir="true"/>
    <property name="xsl.saxon" value="${saxon.path}"/>
    <property name="xsl.saxon.class" value="net.sf.saxon.TransformerFactoryImpl"/>

    <property name="echo.label.in" value="FHIR"/>
    <property name="echo.label.out" value="ADA"/>
    <property name="echo.label" value="${echo.label.in} to ${echo.label.out}"/>

    <property name="project.title" value="${echo.label} for Medicatieproces 9.2.0"/>
    <property name="project.version" value="1.0.0"/>
    <property name="project.prefix" value="mp_9.2.0"/>
    <property name="project.description" value="Contains all relevant materials to convert valid ${echo.label.in} instances for Medicatieproces building blocks to valid ${echo.label.out} instances"/>
    <property name="project.author" value="Nictiz"/>
    <property name="project.website" value="http://www.nictiz.nl/"/>
    <property name="project.status" value="beta"/>
    <property name="project.license" value="GNU-LGPL"/>
    <property name="project.copyright" value="true"/>

    <property name="build.dir" value="../.."/>
    <property name="dummy.output.dir" value="dummy"/>

    <property name="is.name" value="Medicatieproces"/>
    <property name="is.abbreviation" value="mp"/>
    <property name="is.version" value="9.2.0"/>
    <property name="is.version.short" value="92"/>

    <property name="ada.project.source.dir" value="../../../../../../art_decor/projects/${is.abbreviation}-${is.abbreviation}${is.version.short}"/>
    <property name="refs.dir" value="${build.dir}/../../../ada_2_fhir-r4/${is.abbreviation}/${is.version}"/>

    <property name="usecase.fhir.fixtures" value="fhir_fixtures4Touchstone"/>
    <property name="usecase.av" value="sturen_afhandeling_medicatievoorschrift"/>
    <property name="usecase.mg" value="beschikbaarstellen_medicatiegegevens"/>
    <property name="usecase.mo" value="beschikbaarstellen_medicatieoverzicht"/>
    <property name="usecase.mv" value="sturen_medicatievoorschrift"/>
    <property name="usecase.vma" value="sturen_voorstel_medicatieafspraak"/>
    <property name="usecase.avma" value="sturen_antwoord_voorstel_medicatieafspraak"/>
    <property name="usecase.vv" value="beschikbaarstellen_verstrekkingenvertaling"/>
    <property name="usecase.vvv" value="sturen_voorstel_verstrekkingsverzoek"/>
    <property name="usecase.avvv" value="sturen_antwoord_voorstel_verstrekkingsverzoek"/>

    <!-- date.T, currently only used for roundtrip testing -->
    <property name="date.T" value="2022-01-01"/>
    
    <!-- for roundtrip testing -->
    <target name="convert_ada_2_fhir_sub">
        
        <fileset id="inputFiles" dir="${xsl.in}" includes="${xsl.in.include}"/>
        
        <echo/>
        <echo>${echo.label} input files ${xsl.in}/${xsl.in.include}, to be converted with: ${xsl.convert}</echo>
        <xslt force="true" style="${xsl.convert}" destdir="${xsl.out}" extension=".xml" useImplicitFileset="false">
            <fileset refid="inputFiles"/>
            <factory name="${xsl.saxon.class}"/>
            <classpath location="${xsl.saxon}"/>
            <param name="generateInstructionText" expression="true"/>
            <param name="dateT" expression="${param.tdate}" if="param.tdate"/>
            <param name="mask-ids" expression="${param.maskids}" if="param.maskids"/>
        </xslt>
        
    </target>
    
    <target name="convert_fhir_2_ada">

        <!-- beschikbaarstellen_medicatiegegevens -->
        <antcall target="convert_fhir_2_ada_sub">
            <param name="usecase" value="${usecase.mg}"/>
            <param name="build.dir" value="${build.dir}"/>
            <param name="xsl.in" value="fhir_instance"/>
            <param name="xsl.out" value="ada_instance"/>
        </antcall>

        <!-- sturen_medicatievoorschrift -->
        <antcall target="convert_fhir_2_ada_sub">
            <param name="usecase" value="${usecase.mv}"/>
            <param name="build.dir" value="${build.dir}"/>
            <param name="xsl.in" value="fhir_instance"/>
            <param name="xsl.out" value="ada_instance"/>
        </antcall>

        <!-- sturen_afhandeling_medicatievoorschrift -->
        <antcall target="convert_fhir_2_ada_sub">
            <param name="usecase" value="${usecase.av}"/>
            <param name="build.dir" value="${build.dir}"/>
            <param name="xsl.in" value="fhir_instance"/>
            <param name="xsl.out" value="ada_instance"/>
        </antcall>

        <!-- sturen_voorstel_medicatieafspraak -->
        <antcall target="convert_fhir_2_ada_sub">
            <param name="usecase" value="${usecase.vma}"/>
            <param name="build.dir" value="${build.dir}"/>
            <param name="xsl.in" value="fhir_instance"/>
            <param name="xsl.out" value="ada_instance"/>
        </antcall>

        <!-- sturen_antwoord_voorstel_medicatieafspraak -->
        <antcall target="convert_fhir_2_ada_sub">
            <param name="usecase" value="${usecase.avma}"/>
            <param name="build.dir" value="${build.dir}"/>
            <param name="xsl.in" value="fhir_instance"/>
            <param name="xsl.out" value="ada_instance"/>
        </antcall>

        <!-- sturen_voorstel_verstrekkingsverzoek -->
        <antcall target="convert_fhir_2_ada_sub">
            <param name="usecase" value="${usecase.vvv}"/>
            <param name="build.dir" value="${build.dir}"/>
            <param name="xsl.in" value="fhir_instance"/>
            <param name="xsl.out" value="ada_instance"/>
        </antcall>

        <!-- sturen_antwoord_voorstel_verstrekkingsverzoek -->
        <antcall target="convert_fhir_2_ada_sub">
            <param name="usecase" value="${usecase.avvv}"/>
            <param name="build.dir" value="${build.dir}"/>
            <param name="xsl.in" value="fhir_instance"/>
            <param name="xsl.out" value="ada_instance"/>
        </antcall>

    </target>

    <target name="convert_fhir_2_ada_sub">
        <property name="xsl_mp" value="${build.dir}/${usecase}/payload/${usecase}_2_ada.xsl"/>

        <property name="xsl.input" value="${build.dir}/${usecase}/${xsl.in}"/>
        <property name="xsl.output" value="${build.dir}/${usecase}/${xsl.out}"/>

        <mkdir dir="${xsl.output}"/>
        <echo>Deleting previous results, if any</echo>
        <delete>
            <fileset dir="${xsl.output}" includes="*.*"/>
        </delete>

        <sequential>
            <fileset id="inputfilesMP" dir="${xsl.input}" includes="*.xml"/>

            <echo/>
            <echo>${echo.label} ${xsl_mp}</echo>
            <xslt force="true" style="${xsl_mp}" destdir="${xsl.output}" extension=".xml" useImplicitFileset="false">
                <fileset refid="inputfilesMP"/>
                <factory name="${xsl.saxon.class}"/>
                <classpath location="${xsl.saxon}"/>
            </xslt>

        </sequential>
    </target>

    <target name="roundtrip_fhir_2_ada_2_fhir">

        <!-- beschikbaarstellen_medicatiegegevens -->
        <antcall target="convert_fhir_2_ada_sub">
            <param name="usecase" value="${usecase.mg}"/>
            <param name="build.dir" value="${build.dir}"/>
            <param name="xsl.in" value="fhir_instance"/>
            <param name="xsl.out" value="ada_instance"/>
        </antcall>
        <!-- bundles -->
        <antcall target="convert_ada_2_fhir_sub">
            <param name="usecase" value="${usecase.mg}"/>
            <param name="xsl.convert" value="${build.dir}/../../../ada_2_fhir-r4/mp/9.2.0/${usecase.fhir.fixtures}/payload/${usecase.mg}_2_fhir.xsl"/>
            <param name="xsl.in" value="${build.dir}/${usecase.mg}/ada_instance"/>
            <param name="xsl.in.include" value="*.xml"/>
            <param name="xsl.out" value="${build.dir}/${usecase.mg}/roundtrip_fhir_instance"/>
            <param name="param.tdate" value="${date.T}"/>
            <param name="param.maskids" value="${mask.ids}"/>
        </antcall>
    </target>

    <target name="setup" description="Setup subdirectories in ${build.dir}">
        <!-- copies schemas for project dir and appropriate ada instances from refs.dir -->

        <!-- beschikbaarstellen_medicatiegegevens -->
        <antcall target="setup_sub">
            <param name="usecase" value="${usecase.mg}"/>
            <param name="folder.name" value="fhir_instance"/>
            <param name="include.files" value="mg*.xml"/>
        </antcall>

        <!-- sturen_medicatievoorschrift -->
        <antcall target="setup_sub">
            <param name="usecase" value="${usecase.mv}"/>
            <param name="folder.name" value="fhir_instance"/>
            <param name="include.files" value="*.xml"/>
        </antcall>

        <!-- sturen_afhandeling_medicatievoorschrift -->
        <antcall target="setup_sub">
            <param name="usecase" value="${usecase.av}"/>
            <param name="folder.name" value="fhir_instance"/>
            <param name="include.files" value="*.xml"/>
        </antcall>

        <!-- sturen_voorstel_medicatieafspraak -->
        <antcall target="setup_sub">
            <param name="usecase" value="${usecase.vma}"/>
            <param name="folder.name" value="fhir_instance"/>
            <param name="include.files" value="*.xml"/>
        </antcall>

        <!-- sturen_antwoord_voorstel_medicatieafspraak -->
        <antcall target="setup_sub">
            <param name="usecase" value="${usecase.avma}"/>
            <param name="folder.name" value="fhir_instance"/>
            <param name="include.files" value="*.xml"/>
        </antcall>

        <!-- sturen_voorstel_verstrekkingsverzoek -->
        <antcall target="setup_sub">
            <param name="usecase" value="${usecase.vvv}"/>
            <param name="folder.name" value="fhir_instance"/>
            <param name="include.files" value="*.xml"/>
        </antcall>

        <!-- sturen_antwoord_voorstel_verstrekkingsverzoek -->
        <antcall target="setup_sub">
            <param name="usecase" value="${usecase.avvv}"/>
            <param name="folder.name" value="fhir_instance"/>
            <param name="include.files" value="*.xml"/>
        </antcall>


    </target>

    <target name="setup_sub" description="Setup ${build.dir}/${usecase} containing the new/schemas folder from the original ADA project and refreshed ada instances from test_xslt">

        <antcall target="setup_sub_schemas">
            <param name="sub.build.dir" value="${build.dir}/${usecase}"/>
            <param name="schema.string" value="*${usecase}.xsd"/>
        </antcall>

        <antcall target="setup_sub_instances">
            <param name="usecase" value="${usecase}"/>
            <param name="folder.name" value="${folder.name}"/>
            <param name="include.files" value="${include.files}"/>
        </antcall>

    </target>

    <target name="setup_sub_schemas" description="Setup ${sub.build.dir} containing the new/schemas folder from the original ADA project">
        <echo/>
        <echo>Setup ${sub.build.dir} containing refreshed ada schemas (${schema.string})</echo>

        <mkdir dir="${sub.build.dir}/ada_schemas"/>
        <delete>
            <fileset dir="${sub.build.dir}/ada_schemas" includes="*.xsd"/>
        </delete>

        <copy todir="${sub.build.dir}/ada_schemas" failonerror="true">
            <fileset dir="${ada.project.source.dir}/schemas">
                <include name="${schema.string}"/>
                <include name="ada_meta.xsd"/>
            </fileset>
        </copy>

    </target>

    <target name="setup_sub_instances" description="Setup ${build.dir}/${usecase} containing refreshed hl7 instances (${fileset.dir})">

        <echo/>
        <echo>Setup ${build.dir}/${usecase} containing refreshed fhir instances</echo>

        <mkdir dir="${build.dir}/${usecase}/${folder.name}"/>
        <delete>
            <fileset dir="${build.dir}/${usecase}/${folder.name}" includes="*.xml"/>
        </delete>
        <copy todir="${build.dir}/${usecase}/${folder.name}" failonerror="true">
            <fileset dir="${refs.dir}/${usecase}/${folder.name}">
                <include name="${include.files}"/>
            </fileset>
        </copy>

    </target>


</project>
